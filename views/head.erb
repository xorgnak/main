<script
  src="https://code.jquery.com/jquery-3.7.0.min.js"
  integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g="
  crossorigin="anonymous"></script>

<link href="https://fonts.googleapis.com/icon?family=Material+Icons"
      rel="stylesheet">

<script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.1.0/paho-mqtt.min.js"
	integrity="sha512-Y5n0fbohPllOQ21fTwM/h9sQQ/1a1h5KhweGhu2zwD8lAoJnTgVa7NIrFa1bRDIMQHixtyuRV2ubIx+qWbGdDA=="
	crossorigin="anonymous"
	referrerpolicy="no-referrer"></script>

<meta name="viewport" content="width=device-width, initial-scale=1" />

<style>

.material-icons { vertical-align: middle; }

html { font-family: monospace; background-color: black; color: white; font-size: xx-small; }

body { padding: 0; margin: 0; width: 100vw; height: 100vh; }

#form { padding: 0; margin: 0; width: 100%; height: 100%; }

.out { background-color: black; color: grey; border: thin solid grey; }

.in { background-color: black; color: white; border: thin solid green; }

.post { background-color: black; color: orange; border: thin solid green; }

.error { background-color: black; color: red; border: thin solid red; }

.msg { background-color: black; color: blue; border: thin solid blue; }

</style>

<script>

var params = <%= JSON.generate(@params) %>;

function setupIds(length) {
    let result = '';
    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    const charactersLength = characters.length;
    let counter = 0;
    while (counter < length) {
	result += characters.charAt(Math.floor(Math.random() * charactersLength));
	counter += 1;
    }
    return result;
}

const id = setupIds(8);

const client = new Paho.Client('propedicab.com', 8883, 'c' + id);

function emit(t, p) {
    message = new Paho.Message(p);
    message.destinationName = t;
    client.send(message);
}

function display(t, p) {
    $('#output').prepend('<p class="' + t + '" style="margin: 0; padding: 0;">' + p + '</code></p>');
}

function output(i) {
    $('#output').prepend('<p style="margin: 0; padding: 0;">' + i + '</p>');
}

function print(i) {
    output(i);
    console.log(i)
}

client.onConnectionLost = onConnectionLost;
client.onMessageArrived = onMessageArrived;

// connect the client
function connect() {
client.connect({ onSuccess: onConnect , useSSL: true, userName: 'u' + id, password: 'p' + id });
}

function onConnect() {
    client.subscribe(params.net);
    client.subscribe(params.net + '/#');
//    client.subscribe('#');
    emit(params.net, 'CLIENT ' + id);
}

function onConnectionLost(responseObject) {
    if (responseObject.errorCode !== 0) {
	display('error', responseObject.errorMessage);
    }
    connect();
}

function onMessageArrived(message) {
    console.log("[msg] ", message.destinationName, message.payloadString);
    var topic = message.destinationName;
    var t;
    if (topic == params.net + '/') {
      t = 'out';
    } else if (topic == params.net) {
      t = 'in'
    } else {
      t = 'msg'
    }
    display(t, message.payloadString);
}

<% if ENV['BROKER'] != 'localhost' && ENV['BROKER'] != nil %>
connect();
<% end %>

function send() {
    h = { input: $('#input').val(), net: params.net };
    $('#input').val('');
    $.post('/', h, function(data) {
	console.log('[SEND]', data);
	if (data.output != '') {
	  display('post', '<code>' + data.output + '</code>');
	}
    });
}

$(document).on('click', '.send', function(ev) {
    ev.preventDefault();
    $('#input').val($(this).val());
    $('#send').click();
});

$(document).on('submit', '#form', function(ev) {
  ev.preventDefault();
  send();
});

$(document).on('click', '#send', function(ev) {
    ev.preventDefault();
    send();
});
</script>
    
