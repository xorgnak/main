

* internals

** commands
Each command is responsible for a single operation. The command may accept one or more argument.

** events
An event is a collection of commands to be executed when the event is triggered.  The "/init" event is always executed with privledge.  Direct usb access will also allow privledged execution.

** event classes
An event class is a collection of specific events which may be triggered from within an event.  An example would be an event class of "/times/" containing the events "/times/morning", "/times/afternoon", and "/times/night".  Triggering the "/time" event may trigger any of these events based upon arbitrary criteria.

* commands

** z4(mode)
The z4 system.
255. network op.
15. meow.
14. random.
13. time.
9. lua.
8. at.
7. ev.
6. io.
5. nm.
4. buffers.
3. memory.
2. chip.
1. sketch.
0. copyright.
*. directory.

** io(mode, A)
Buffer io interactions.
-1. append A to temp buffer.
0. set temp buffer to A.
1. append A to out buffer.
2. publish temp buffer to A.
3. emit comment A with temp buffer.
4. set beacon to A.
15. append hist buf to out buf.
16. append comment A and temp buffer to out buffer.

** ev(mode, A, B)
Event interactions.
-3. bork root A.
-2. bork class A.
-1. bork event A.
0. read event A.
1. write temp buffer to event A.
2. append temp buffer to event A.
3. create class A.
4. move A to B.
5. trigger event A.
6. write hist buffer to event A.
7. append hist buffer to event A.
16. list root A.

** nm(mode, A, B)
Network operations.
-3. start AP with ssid A and pass B.
-2. scan and connect to ssid A and pass B.
-1. scan.
0. stop network.
1. set ssid A and pass B.
2. connect network.

** ok()
Boot to a known state.

